1. create backend and frontend folder
2. In frontend, npm create vite@latest
3. Now for backend, initialize npm init -y at root diectory for hosting purpose
4. npm i express dotenv cookie-parser bcryptjs mongoose socket.io jsonwebtoken
5. npm i nodemon --save-dev
6. create server.js in backend and change script in package.json to "nodemon backend/server.js"
7. run npm run server
8. create .env file and change PORT and import dotenv in server.js
 change "type": "module" and use import instead of const req
 create routes/authRoutes.js and imported it in server, create signup,login,logout
 create function of login,logout in controller and import it in authRoutes
 create db/connectMongoDB.js and imported it in server.js
 Create models/userModel.js in backend
 complete signup function in authController
 Create utils/generateToken.js in backend
 Create secret key for jwt in.env file using "openssl rand -base64 32" in git bash
 ctrl+shift+p then search reload window- agr vscode hang ho rha to reload kro
 complete  generateTokenAndSetCookies function and import it in authController signup funtion
 complete login function
 complete logout function
 Create MessageModel and ConversationModel in backend
 Create messageController function,import it new messageRoutes, then import messageRoutes in server.js
 Import cookieparser in server, and complete middleware/protectRoute.js, use middleware in both messageRoutes and userRoutes
 middleware used for verification, mainly it sets the value req.user = user from the token
 
 
